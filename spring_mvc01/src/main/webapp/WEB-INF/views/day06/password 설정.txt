-- 회원가입 시
1. password 받아서 암호화 하고 DB에 저장

-- 로그인 시
1. 파라미터를 받은 아이디가 있는 지 검사하고 있으면
   사용자가 로그인 할 때 입력한 암호(암호화X) => 암호화로 변경 후
   DB에서 가져온 암호(암호화O)와 사용자가 입력한 암호를 암호화 변경한 암호와 비교해서 같으면 성공
   
주의) 암호된 암호는 복호화가 안 됨

-- 설정 방법(만드는 순서)
1. pom.xml에 라이브러리 설정

   spring-security-web, spring-security-core, spring-security-config
   		<!-- spring-security -->
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>5.3.13.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>5.3.13.RELEASE</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>5.3.13.RELEASE</version>
		</dependency>
		
2. mail 처리하는 것처럼 root-context.xml를 복사해서 spring-security.xml 만들고
   namespace에 security를 선택 후,
   	<!-- spring-security 관련 -->
	<!-- id는 무조건 첫 글자 소문자 필수 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	
	</bean>
	추가
   
3. web.xml
    /WEB-INF/spring/security-context.xml 
    추가